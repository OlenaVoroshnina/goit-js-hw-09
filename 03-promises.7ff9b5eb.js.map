{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAyBC,SAASC,cAAc,UAChDC,EAAUF,SAASC,cAAc,yBACjCE,EAASH,SAASC,cAAc,wBAChCG,EAAWJ,SAASC,cAAc,0BAMxC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAGpBA,E,IAfPR,EAAuBgB,iBAAiB,SAoBxC,SAAqCC,GACnCA,EAAMC,iBAKN,IAJA,IAAIC,EAAQC,OAAOjB,EAAQkB,OACvBC,EAAOF,OAAOhB,EAAOiB,OACrBE,EAASH,OAAOf,EAASgB,OAEpBG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BlB,EAAckB,EAAI,EAAGL,EAAQK,EAAIF,GAC9BG,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MACjBmB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M,IAGjDuB,OAAM,SAAAL,G,IAAGnB,EAAQmB,EAARnB,SAAUC,EAAKkB,EAALlB,MAClBmB,EAAA7B,GAAS8B,OAAOI,QACd,sBAAqCF,OAAfvB,EAAS,QAAYuB,OAANtB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst buttonCreatePromisesEl = document.querySelector('button');\nconst delayEl = document.querySelector('input[name = \"delay\"]');\nconst stepEl = document.querySelector('input[name = \"step\"]');\nconst amountEl = document.querySelector('input[name = \"amount\"]');\n\n\nbuttonCreatePromisesEl.addEventListener('click', onButtonCreatePromisesClick);\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n   \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      \n      } else {\n        reject({ position, delay });\n        \n      }\n    }, delay);\n  }, )\n}\n\n\nfunction onButtonCreatePromisesClick(event){\n  event.preventDefault();\n  let delay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n  let amount = Number(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      })\n  };\n};\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$buttonCreatePromisesEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","delay1","Number","value","step","amount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.7ff9b5eb.js.map"}